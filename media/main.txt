import sys
from os import get_terminal_size
from time import sleep

def create_screen():
  tw, th = get_terminal_size()
  return [" " * tw for i in range(th)]


def print_screen(screen):
  for line in screen:
    print(line, end="")
  sys.stdout.flush()

def draw_border(screen, char):
  screen[0] = char * len(screen[0])
  for i in range(1, len(screen)):
    screen[i] = "{}{}{}".format(char, screen[i][1:-1], char)
  screen[-1] = char * len(screen[0])

def draw_tree(screen, trunk, size, light):
  half = int(len(screen[0]) / 2)
  for t in range(trunk):
    currline = screen[-2-t]
    screen[-2-t] = "{}{}{}".format(
      currline[0:half-2],
      "|||",
      currline[half+1:]
    )
  leafbase = -2-trunk
  for s in range(size):
    leafline = "{}{}".format(
      light,
      "-{}".format(light) * (size-s-1)
    )
    currline = screen[leafbase-s]
    leafhalf = int(len(leafline) / 2)
    screen[leafbase-s] = "{}{}{}".format(
      currline[0:half-leafhalf-1],
      leafline,
      currline[half+leafhalf:],
    )

#start
screen = create_screen()
draw_border(screen, "-")
print_screen(screen)

for i in range(4):
  sleep(1)
  draw_tree(screen, i, 0, "*")
  print_screen(screen)

for i in range(14):
  sleep(1)
  draw_tree(screen, 3, i, "-")
  print_screen(screen)

counter = 0
while True:
  counter += 1
  sleep(1)
  light = "*" if counter % 2 else "-"
  draw_border(screen, light)
  draw_tree(screen, 3, 17, light)
  print_screen(screen)
